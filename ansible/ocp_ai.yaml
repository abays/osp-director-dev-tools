---
- hosts: convergence_base
  become: true
  gather_facts: false

  tasks:
  - name: Include default variables
    include_vars: vars/default.yaml

  - name: Include AI variables
    include_vars: vars/ocp_ai.yaml


  ### EXECUTE ASSISTED INSTALLER PLAYBOOK

  - name: Delete existing AI cluster (if any)
    command: "aicli -U http://{{ ocp_ai_bm_ip }}:{{ ocp_ai_service_port | default('8090', true) }} delete cluster {{ ocp_cluster_name }}"

  - name: Create assisted installer execution bash script
    template:
      src: ai/cluster_mgnt_roles/run_playbook.sh.j2
      dest: "{{ base_path }}/cluster_mgnt_roles/run_playbook.sh"
      mode: '0755'

  - debug:
      msg: |
        Executing the assisted installer playbook. You can tail the logs at {{ base_path }}/ai.log on
        the host for progress.

  - name: Run the assisted installer playbook
    shell: ./run_playbook.sh
    args:
      chdir: "{{ base_path }}/cluster_mgnt_roles"

  - name: Download assisted installer cluster kubeconfig
    shell: "aicli -U http://{{ ocp_ai_bm_ip }}:{{ ocp_ai_service_port | default('8090', true) }} download kubeconfig {{ ocp_cluster_name }}"
    args:
      chdir: "{{ base_path }}/cluster_mgnt_roles"


- hosts: localhost
  vars_files: vars/default.yaml
  roles:
  - oc_local

  tasks:
  - name: Include AI variables
    include_vars: vars/ocp_ai.yaml

  ### UN-SCHEDULABLE MASTERS

  - name: Set directory for storing schedule/ingress yaml files
    set_fact:
      ai_sched_ingress_yaml_dir: "{{ working_yamls_dir }}/ai_schedule_ingress"

  - name: Set facts to disable schedulable masters and reduce ingress replica count
    set_fact:
      ocp_ai_masters_schedulable: false
      ocp_ai_ingress_replicas: 2

  - name: Create local yaml dir for schedule/ingress CRs
    file:
      path: "{{ ai_sched_ingress_yaml_dir }}"
      state: directory
      mode: '0755'
      owner: root
      group: root

  - name: Create schedule/ingress CRs
    template:
      src: ai/cluster_mgnt_roles/{{ item }}.j2
      dest: "{{ ai_sched_ingress_yaml_dir }}/{{ item }}"
      mode: '0664'
    with_items:
      - 50-master-scheduler.yml
      - 60-ingress-controller.yml

  - name: Apply schedule/ingress CRs
    shell: "oc apply -f {{ ai_sched_ingress_yaml_dir }}/{{ item }}"
    environment: &oc_env
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ base_path }}/cluster_mgnt_roles/kubeconfig.{{ ocp_cluster_name }}"
    with_items:
      - 50-master-scheduler.yml
      - 60-ingress-controller.yml

  ### PROVISIONING NETWORK

  - name: Set directory for storing AI Metal3 yaml files
    set_fact:
      ai_metal3_yaml_dir: "{{ working_yamls_dir }}/ai_metal3"

  - name: Create local yaml dir for Metal3 CRs
    file:
      path: "{{ ai_metal3_yaml_dir }}"
      state: directory
      mode: '0755'
      owner: root
      group: root

  - name: Create Metal3 provisioning CR
    template:
      src: ai/metal3/provisioning.yml.j2
      dest: "{{ ai_metal3_yaml_dir }}/provisioning.yml"
      mode: '0664'

  - name: Apply Metal3 provisioning CR
    shell: "oc apply -f {{ ai_metal3_yaml_dir }}/provisioning.yml"
    environment: 
      <<: *oc_env

  - name: Wait for Metal3 pods to restart
    shell: oc wait pod --for condition=ready -n openshift-machine-api -l k8s-app=metal3 --timeout={{ default_timeout }}s
    environment:
      <<: *oc_env
