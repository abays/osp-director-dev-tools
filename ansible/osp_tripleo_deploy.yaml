---
- hosts: localhost
  vars_files: vars/default.yaml
  roles:
  - oc_local

  tasks:
  - name: Set directory for the tripleo deployment files
    set_fact:
      ooo_yaml_dir: "{{ working_yamls_dir }}/tripleo_deploy"
      ooo_script_dir: "{{ working_yamls_dir }}/tripleo_deploy_bin"

  - name: Create yaml dir
    file:
      path: "{{ item }}"
      state: directory
      mode: '0755'
    with_items:
    - "{{ ooo_yaml_dir }}"
    - "{{ ooo_script_dir }}"

  - name: render templates to yaml dir
    template:
      src: "osp/tripleo_deploy/{{ item }}.j2"
      dest: "{{ ooo_yaml_dir }}/{{ item }}"
      mode: '0644'
    vars:
      - nfs_server: '192.168.25.1'
    with_items:
    - custom.yaml
    - glance-backend-nfs.yaml
    - containers-prepare-parameter.yaml
    - role-counts.yaml

  - name: copy ooo files to yaml dir
    copy:
      src: "{{ item }}"
      dest: "{{ ooo_yaml_dir }}/"
      mode: '0644'
    with_fileglob:
    - "osp/tripleo_deploy/*.yaml"

  - name: copy tripleo-deploy.sh to ooo_script_dir
    copy:
      src: osp/tripleo-deploy.sh
      dest: "{{ ooo_script_dir }}/tripleo-deploy.sh"
      mode: '0744'

  - name: create tripleo-deploy-config ConfigMap
    shell: |
      if oc get cm -n openstack tripleo-deploy-config; then
        oc delete cm -n openstack tripleo-deploy-config
      fi
      oc create cm -n openstack tripleo-deploy-config --from-file={{ ooo_yaml_dir }}/
    environment: &oc_env
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"

  - name: create tripleo-deploy.sh ConfigMap
    shell: |
      if oc get cm -n openstack tripleo-deploy-sh; then
        oc delete cm -n openstack tripleo-deploy-sh
      fi
      oc create cm -n openstack tripleo-deploy-sh --from-file {{ ooo_script_dir }}/tripleo-deploy.sh
    environment:
      <<: *oc_env

  - name: Create glance NFS share
    become: true
    become_user: root
    file:
      path: "/home/nfs/{{ item }}"
      state: directory
      mode: '0777'
      group: nobody
      owner: nobody
    with_items:
      - glance
      - glance-staging

  - name: Configure glance export
    become: true
    become_user: root
    lineinfile:
      path: /etc/exports.d/glance.exports
      line: "/home/nfs/{{ item }} *(rw,sync,no_root_squash)"
      create: yes
      mode: '0644'
    with_items:
      - glance
      - glance-staging

  - name: Export NFS share to the server
    become: true
    become_user: root
    command: "exportfs -r"
