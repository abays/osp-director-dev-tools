---
- hosts: localhost
  vars_files: vars/default.yaml
  roles:
  - oc_local

  tasks:
  - name: Include variables
    include_vars: vars/default.yaml

  - name: check if osp network already exists
    become: true
    become_user: root
    shell: >
      virsh net-list --all | grep ospnetwork
    ignore_errors: true
    register: ospnetwork_exist

  - name: create osp network
    when: ospnetwork_exist.rc == 1
    block:
    - name: create osp network directory
      file:
        path: "{{ working_dir }}/osp-network"
        state: directory
        mode: '0755'

    - name: copy osp network files to {{ working_dir }}/osp-network
      copy:
        src:  "{{ item }}"
        dest: "{{ working_dir }}/osp-network/"
        mode: 0644
      with_items:
        - files/ospnetwork.xml

    - name: Define ospnetwork libvirt network
      become: true
      become_user: root
      command: "virsh net-define {{ working_dir }}/osp-network/ospnetwork.xml"

  - name: Setup OSP network
    become: true
    become_user: root
    block:
    - name: create libvirt hooks directory
      file:
        path: /etc/libvirt/hooks
        state: directory
        mode: 0755

    - name: copy libvirt network hook to /etc/libvirt/hooks/network
      copy:
        src:  files/qemu/network
        dest: /etc/libvirt/hooks/network
        mode: 0750

    - name: Restart libvirt
      service:
         name: libvirtd
         state: restarted

    - name: Start the osp network
      shell: |
        virsh net-start --network ospnetwork
        virsh net-autostart --network ospnetwork
      register: ospnetwork_start
      failed_when: ospnetwork_start.stderr != "" and "network is already active" not in ospnetwork_start.stderr

    - name: get active worker nodes, if they exist
      shell: >
          echo $(virsh list --name | grep worker)
      register: worker_ocp_active_dedicated
      when: ocp_num_workers > 0

    - name: get active master nodes and count them as workers, if this cluster has no dedicated workers
      shell: >
          echo $(virsh list --name | grep master)
      register: worker_ocp_active_masters
      when: ocp_num_workers < 1

    - name: set active worker nodes fact, if dedicated workers exist
      set_fact:
        worker_ocp_active: "{{ worker_ocp_active_dedicated.stdout_lines }}"
      when: "'stdout_lines' in worker_ocp_active_dedicated and worker_ocp_active_dedicated.stdout_lines|length > 0"

    - name: set active worker nodes fact, if no dedicated workers exist
      set_fact:
        worker_ocp_active: "{{ worker_ocp_active_masters.stdout_lines }}"
      when: "'stdout_lines' in worker_ocp_active_masters and worker_ocp_active_masters.stdout_lines|length > 0"

    - name: get inactive worker nodes
      shell: >
          echo $(virsh list --inactive --name | grep worker)
      register: worker_ocp_inactive

    - name: Attach/detach network interfaces for INACTIVE workers
      block:
      - name: Detach osp network interface from INACTIVE worker VM's if this is a rerun of the playbook
        command: "virsh detach-interface {{ item }} bridge --persistent"
        with_items: "{{ worker_ocp_inactive.stdout_lines[0].split(' ') }}"
        ignore_errors: true

      - name: Attach the osp network to INACTIVE worker VM's
        command: "virsh attach-interface {{ item }} bridge ospnetwork --model virtio --persistent"
        with_items: "{{ worker_ocp_inactive.stdout_lines[0].split(' ') }}"
      when: worker_ocp_inactive.stdout_lines|length > 0

    - name: Attach/detach network interfaces for ACTIVE workers
      block:
      - name: Detach osp network interface from ACTIVE worker VM's if this is a rerun of the playbook
        command: "virsh detach-interface {{ item }} bridge --persistent --live"
        with_items: "{{ worker_ocp_active[0].split(' ') }}"
        ignore_errors: true

      - name: Attach the osp network to ACTIVE worker VM's
        shell: |
          # HACK to fix dev-scripts bug
          virsh destroy {{ item }}
          virsh attach-interface {{ item }} bridge ospnetwork --model virtio --persistent --config
          virsh start {{ item }}
        with_items: "{{ worker_ocp_active[0].split(' ') }}"
        when: not (ocp_ai|bool)

      - name: Attach the osp network to ACTIVE worker VM's
        command: "virsh attach-interface {{ item }} bridge ospnetwork --model virtio --persistent --config"
        with_items: "{{ worker_ocp_active[0].split(' ') }}"
        when: ocp_ai|bool
      when: worker_ocp_active|length > 0
