---
- name: Get current {{ domain }} VM attached disk count
  shell: "virsh dumpxml {{ domain }} | grep \"source file='{{ local_storage_data_dir }}/{{ domain }}/local_storage_disk\" | wc -l"
  register: cur_storage_disks

- name: Change {{ domain }} VM specs
  become: true
  become_user: root
  when: (cur_storage_disks.stdout | int) != (local_storage_disks | length)
  block:

  - name: Clear host VM memory cache
    shell: echo 3 | tee /proc/sys/vm/drop_caches

  - name: Create local storage data disks for {{ domain }} VM
    shell: |
      set -e -o pipefail

      for i in {1..{{ local_storage_disks | length }}}; do
          fs="{{ local_storage_data_dir }}/{{ domain }}/local_storage_disk_${i}"

          if [ ! -f "$fs" ]; then
              # Create a sparse file of the correct size and populate it with an
              # ext4  filesystem.
              mkdir -p {{ local_storage_data_dir }}/{{ domain }}
              truncate -s {{ local_storage_disk_size }}G $fs
              mkfs.ext4 -m 0 "$fs"

              # Make world readable
              chown nobody.nobody "$fs"
              chmod 0777 "$fs"
          fi
      done

  - name: Stop {{ domain }} VM
    virt:
      name: "{{ domain }}"
      state: destroyed

  - name: Attach data disks to {{ domain }} VM
    command: "virsh attach-disk {{ domain }} --source {{ local_storage_data_dir }}/{{ domain }}/local_storage_disk_{{ index + 1 }} --target {{ disk }} --persistent"
    loop: "{{ local_storage_disks }}"
    loop_control:
      index_var: index
      loop_var: disk
