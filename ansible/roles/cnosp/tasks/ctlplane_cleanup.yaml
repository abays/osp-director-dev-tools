---
- name: Set directory for ctlplane yaml files
  ansible.builtin.set_fact:
    ctlplane_yaml_dir: "{{ working_yamls_dir }}/ctlplane"

- name: Show yaml output dir
  ansible.builtin.debug:
    msg: "yamls will be written to {{ ctlplane_yaml_dir }} locally"

- name: Clean yaml dir
  ansible.builtin.file:
    state: absent
    path: "{{ ctlplane_yaml_dir }}/"

- name: Create yaml dir
  ansible.builtin.file:
    path: "{{ ctlplane_yaml_dir }}"
    state: directory
    mode: "0755"

- name: Copy files to yaml dir
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ ctlplane_yaml_dir }}/"
    mode: "0644"
  with_fileglob:
    - "ctlplane/*"

- name: Delete ctlplane
  ansible.builtin.shell: |
    set -e
    oc delete --ignore-not-found -n openstack -f "{{ ctlplane_yaml_dir }}"
  environment: &oc_env
    PATH: "{{ oc_env_path }}"
    KUBECONFIG: "{{ kubeconfig }}"

- name: Delete keystone deployment
  ansible.builtin.shell: |
    set -e
    for i in $(oc get keystoneservices -o name); do oc delete -n openstack --ignore-not-found $i; done
    oc delete --ignore-not-found -n openstack deployment keystone
    oc delete --ignore-not-found -n openstack route keystone
    oc delete --ignore-not-found -n openstack svc keystone
    oc delete --ignore-not-found -n openstack secret keystone
    oc delete --ignore-not-found -n openstack cm keystone
    oc delete --ignore-not-found -n openstack cm openstack-config
    oc delete --ignore-not-found -n openstack secret openstack-config-secret
  environment:
    <<: *oc_env

- name: Delete databases
  ansible.builtin.shell: |
    set -e
    for i in $(oc get -n openstack mariadbdatabases -o name); do
      oc get -n openstack $i -o=json | jq '.metadata.finalizers = null' | oc apply -f -
      oc delete --ignore-not-found -n openstack $i
    done
  environment:
    <<: *oc_env

#
# Delete service custom configs
#
- name: Set directory for cinder yaml files
  ansible.builtin.set_fact:
    cinder_yaml_dir: "{{ working_yamls_dir }}/cinder"

- name: Show yaml output dir
  ansible.builtin.debug:
    msg: "yamls will be written to {{ cinder_yaml_dir }} locally"

- name: Clean yaml dir
  ansible.builtin.file:
    state: absent
    path: "{{ cinder_yaml_dir }}/"

- name: Create yaml dir
  ansible.builtin.file:
    path: "{{ cinder_yaml_dir }}"
    state: directory
    mode: "0755"

- name: Copy files to yaml dir
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ cinder_yaml_dir }}/"
    mode: "0644"
  with_fileglob:
    - "cinder/*"

- name: Delete Cinder custom ConfigMaps
  ansible.builtin.shell: |
    set -e
    oc delete --ignore-not-found -n openstack -f "{{ cinder_yaml_dir }}"
  environment:
    <<: *oc_env
