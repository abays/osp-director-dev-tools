---
- name: Set directory for ctlplane yaml files
  ansible.builtin.set_fact:
    ctlplane_yaml_dir: "{{ working_yamls_dir }}/ctlplane"

- name: Show yaml output dir
  ansible.builtin.debug:
    msg: "yamls will be written to {{ ctlplane_yaml_dir }} locally"

- name: Clean yaml dir
  ansible.builtin.file:
    state: absent
    path: "{{ ctlplane_yaml_dir }}/"

- name: Create yaml dir
  ansible.builtin.file:
    path: "{{ ctlplane_yaml_dir }}"
    state: directory
    mode: "0755"

- name: Copy files to yaml dir
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ ctlplane_yaml_dir }}/"
    mode: "0644"
  with_fileglob:
    - "ctlplane/*"

- name: Start ctlplane
  ansible.builtin.shell: |
    set -e
    oc apply -n openstack -f "{{ ctlplane_yaml_dir }}"
  environment: &oc_env
    PATH: "{{ oc_env_path }}"
    KUBECONFIG: "{{ kubeconfig }}"

- name: Wait for mariadb pod creation
  ansible.builtin.shell: |
    oc get -n openstack pod/mariadb
  environment:
    <<: *oc_env
  register: mariadb_pod_creation
  until: mariadb_pod_creation is not failed
  retries: "{{ (default_timeout / 5) | int }}"
  delay: 5

- name: Wait for mariadb deployment
  ansible.builtin.shell: |
    oc wait -n openstack pod/mariadb --for condition=ready --timeout={{ default_timeout }}s
  environment:
    <<: *oc_env

- name: Wait for keystone deployment to be created
  ansible.builtin.shell: |
    oc get -n openstack deployment/keystone
  environment:
    <<: *oc_env
  register: keystone_deployment_creation
  until: keystone_deployment_creation is not failed
  retries: "{{ (default_timeout / 5) | int }}"
  delay: 5

- name: Wait for keystone deployment
  ansible.builtin.shell: |
    oc wait -n openstack deployment/keystone --for condition=Available \
        --timeout={{ default_timeout }}s
  environment:
    <<: *oc_env

# This workaround can be removed when
# https://issues.redhat.com/browse/OSPK8-248 is resolved.
- name: Wait for keystone bootstrap
  ansible.builtin.shell: |
    set -e -o pipefail

    oc get -n openstack keystoneapi/keystone -o json | jq -re '.status.bootstrapHash'
  environment:
    <<: *oc_env
  register: keystone_bootstrap
  until: keystone_bootstrap is not failed and keystone_bootstrap.stdout != ""
  retries: "{{ (default_timeout / 5) | int }}"
  delay: 5
